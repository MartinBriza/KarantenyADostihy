name: Build

on:
  push:
    branches:
      - '**'
  create:
    branches:
      - 'master'
    tags:
      - '**'

jobs:
  msvc:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Build the application
      shell: bash
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        export CMAKE_PREFIX_PATH="$Qt5_Dir/lib/cmake"
        export PATH="$Qt5_Dir/bin":"$PATH"
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=../release -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release -- -m
    - name: Install the application    
      if: github.event_name == 'create'
      shell: bash
      run: |
        cd build
        cmake -P cmake_install.cmake
        mkdir -p release
        mv client/Release/Client.exe release/
    - name: windeployqt
      if: github.event_name == 'create'
      shell: bash
      run: |
        cd build/release
        $Qt5_Dir/bin/windeployqt.exe --verbose 2 --release --compiler-runtime --angle --qmldir ../.. Client.exe
    - name: Package the application
      if: github.event_name == 'create'
      shell: bash
      run: |
        cd build/release
        7z a release.zip *
    - name: Upload
      if: github.event_name == 'create'
      shell: bash
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} tag="$TAG_NAME" filename="build/release/release.zip" renameto="KarantenyADostihy-win-${TAG_NAME/v/}".zip

  mingw:
    runs-on: windows-2019
    if: false
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        arch: win32_mingw73
    - name: Build the application
      shell: bash
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        export CMAKE_PREFIX_PATH="$Qt5_Dir/lib/cmake"
        export PATH="$Qt5_Dir/bin":"$PATH"
        mkdir build
        cd build
        cmake -DCMAKE_SH="CMAKE_SH-NOTFOUND" .. -G "MinGW Makefiles"
        cmake --build . VERBOSE=1
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install Qt
      run: |
        sudo apt update
        sudo apt install libxss1 libgstreamer-plugins-base1.0-0 libgstreamer1.0-0 qt5-default libqt5gui5 qttools5-dev-tools qttools5-dev libqt5webengine5 libqt5webenginecore5 libqt5webenginewidgets5 libqt5printsupport5 libqt5quickwidgets5 libqt5x11extras5 libxss1 patchelf binutils cmake pkg-config qtbase5-dev qtwebengine5-dev libqt5x11extras5-dev qtbase5-private-dev libssl-dev libxss-dev libxmu-dev
    - name: Build the application
      shell: bash
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        mkdir build
        cd build
        cmake ..
        cmake --build . -- -j2

  flatpak:
    runs-on: ubuntu-18.04
    if: github.event_name == 'create'
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install Flatpak
      run: |
        sudo apt update
        sudo apt install flatpak flatpak-builder
    - name: Install Flatpak KDE SDK
      run: |
        sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
        sudo flatpak install --system -y flathub org.kde.Platform//5.12
        sudo flatpak install --system -y flathub org.kde.Sdk//5.12
    - name: Build Linux Flatpak package - KDE based
      run: |
        pushd dist
        sudo flatpak-builder --repo=flatpak-repo --force-clean flatpak-build cz.rtinbriza.ma.Karanteny.json
        flatpak build-bundle flatpak-repo cz.rtinbriza.ma.Karanteny.flatpak cz.rtinbriza.ma.Karanteny
        mv cz.rtinbriza.ma.Karanteny.flatpak ..
        popd
    - name: Upload to GitHub
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} tag="$TAG_NAME" filename="cz.rtinbriza.ma.Karanteny.flatpak" renameto="cz.rtinbriza.ma.Karanteny-${TAG_NAME/v/}.flatpak"


  macos:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install the dependencies
      run: |
        brew install qt
        brew install openssl
        brew install cmake
        npm install --global create-dmg
    - name: Build the application
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        mkdir build
        cd build
        export CMAKE_PREFIX_PATH=/usr/local/opt/qt5/lib/cmake
        export OPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1/
        cmake ..
        make -j2
    - name: Create the dmg
      run: |
        cd build
        /usr/local/opt/qt5/bin/macdeployqt client/Client.app -qmldir=../client
        create-dmg client/Client.app || true
        mv " .dmg" ../KarantenyADostihy-macos-${TAG_NAME/v/}.dmg
    - name: Upload to GitHub
      if: github.event_name == 'create'
      run: |
        TAG_NAME=$(./dist/get-tag-name.sh)
        ./dist/upload-github-release-asset.sh github_api_token=${{ secrets.GITHUB_TOKEN }} tag="$TAG_NAME" filename="KarantenyADostihy-macos-${TAG_NAME/v/}.dmg"
